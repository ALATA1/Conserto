pipeline {
    agent any

    environment {
        PYTHON = 'C:\\Users\\ibrahima.alata\\AppData\\Local\\Programs\\Python\\Python313\\python.exe'
        RESULTS_DIR = 'Resultats'
        ALLURE_RESULTS_DIR = 'Resultats'
        ALLURE_REPORT_DIR = 'Resultats'
        HEADLESS = 'true'
    }

    triggers {
        cron('H 6 * * 1-5')  // Tous les jours ouvr√©s √† 8h
    }

    parameters {
        string(name: 'EMAIL', defaultValue: 'ibrahima.alata@conserto.pro', description: 'Destinataire du rapport')
    }

    tools {
        allure 'Allure'
    }

    stages {
        stage('Installation des d√©pendances') {
            steps {
                echo 'Installation des librairies'
                bat "${env.PYTHON} -m pip install --upgrade pip"
                bat "${env.PYTHON} -m pip install -r requirements.txt"
            }
        }

        stage('Ex√©cution des tests') {
            steps {
                echo 'Lancement des tests'
                bat "${env.PYTHON} -m robot --listener allure_robotframework;allure-results Tests/TestSuites/Conserto"
            }
        }

        stage('G√©n√©rer rapport Allure') {
            steps {
                echo 'G√©n√©ration du rapport Allure...'
                bat 'C:\\ProgramData\\Jenkins\\.jenkins\\workspace\\tools\\allure\\bin\\allure.bat generate allure-results -o allure-report --clean'
            }
        }

        stage('Compression du rapport') {
            steps {
                echo 'Compression du dossier Resultats...'
                bat 'powershell Compress-Archive -Path Resultats\\* -DestinationPath Resultats\\rapport_robot.zip -Force'
            }
        }

        stage('Rapport-Publisher') {
            steps {
                echo 'Archivage des rapports...'
                robot outputPath: 'Resultats'
                archiveArtifacts artifacts: 'Resultats/*.html'
                archiveArtifacts artifacts: 'Resultats/report.html, Resultats/log.html, Resultats/output.xml, Resultats/Screenshot/**, Resultats/rapport_robot.zip', allowEmptyArchive: true
            }
        }
    }

    post {
        always {
            script {
                def allureDir = 'allure-results'
                if (fileExists(allureDir)) {
                    try {
                        allure includeProperties: false, jdk: '', results: [[path: allureDir]]
                    } catch (err) {
                        echo "Erreur lors de la publication Allure : ${err}"
                    }
                }
            }
        }

        success {
            emailext (
                subject: "‚úÖ SUCC√àS - Rapport de test ${env.JOB_NAME} #${env.BUILD_NUMBER}",
                body: """
                    Bonjour,

                    Le build *${env.JOB_NAME}* #${env.BUILD_NUMBER} a √©t√© ex√©cut√© avec **succ√®s**.

                    üìé Rapport HTML : ${env.BUILD_URL}/Resultats/log.html 
                    üìä Rapport Allure : <a href="${env.BUILD_URL}/allure-report/index.html">index.html</a><br><br>

                    Cordialement,  
                    Jenkins
                """,
                mimeType: 'text/html',
                to: "${params.EMAIL}",
                attachmentsPattern: 'Resultats/rapport_robot.zip'
            )

            script {
                def teamsWebhook = 'https://conserto365.webhook.office.com/webhookb2/beceef74-aa06-4f9f-ad9a-d390d968918c@dc363e45-8d5b-4214-8003-fd7a4cc5dde8/IncomingWebhook/01f248867e984eca9af978ba01ab78aa/86b10697-56ab-463a-b5b9-229478a575a8/V2bnXOPqtXgG2AFKPmFRvRVE2MrgJeIkXB85rf68t0RMc1' // <-- remplace ici
                def message = """
                {
                  "@type": "MessageCard",
                  "@context": "http://schema.org/extensions",
                  "themeColor": "00FF00",
                  "summary": "Succ√®s du build",
                  "sections": [{
                    "activityTitle": "‚úÖ Succ√®s du build: ${env.JOB_NAME} #${env.BUILD_NUMBER}",
                    "activitySubtitle": "Jenkins CI",
                    "facts": [
                      {"name": "Projet", "value": "${env.JOB_NAME}"},
                      {"name": "Build", "value": "#${env.BUILD_NUMBER}"},
                      {"name": "Rapport HTML", "value": "[log.html](${env.BUILD_URL}/Resultats/log.html)"},
                      {"name": "Rapport Allure", "value": "[Allure Report](${env.BUILD_URL}/allure-report/index.html)"}
                    ],
                    "markdown": true
                  }]
                }
                """
                writeFile file: 'teams_payload_success.json', text: message
                // bat 'curl -H "Content-Type: application/json" -d @teams_payload_success.json "https://teams.microsoft.com/l/channel/19A6a989d0b84144441b4cc6679be1d1f740thread.tacv2/GA9nA9ral?groupId=beceef74-aa06-4f9f-ad9a-d390d968918c&tenantId=dc363e45-8d5b-4214-8003-fd7a4cc5dde8"'
                // bat 'curl -H "Content-Type: application/json" -d @teams_payload_success.json "https://outlook.office.com/webhook/xxx/IncomingWebhook/yyy/zzz"'
                bat 'curl -H "Content-Type: application/json" -d @teams_payload_success.json "https://conserto365.webhook.office.com/webhookb2/beceef74-aa06-4f9f-ad9a-d390d968918c@dc363e45-8d5b-4214-8003-fd7a4cc5dde8/IncomingWebhook/01f248867e984eca9af978ba01ab78aa/86b10697-56ab-463a-b5b9-229478a575a8/V2bnXOPqtXgG2AFKPmFRvRVE2MrgJeIkXB85rf68t0RMc1"'
            }
        }

        failure {
            emailext (
                subject: "‚ùå √âCHEC - Rapport de test ${env.JOB_NAME} #${env.BUILD_NUMBER}",
                body: """
                    Bonjour,

                    Le build *${env.JOB_NAME}* #${env.BUILD_NUMBER} a √©chou√©.

                    üìé Voir logs ici : ${env.BUILD_URL}console  
                    üìé Rapport HTML : ${env.BUILD_URL}/Resultats/log.html

                    Cordialement,  
                    Jenkins
                """,
                to: "${params.EMAIL}",
                attachmentsPattern: 'Resultats/rapport_robot.zip'
            )

            script {
                def teamsWebhook = 'https://conserto365.webhook.office.com/webhookb2/beceef74-aa06-4f9f-ad9a-d390d968918c@dc363e45-8d5b-4214-8003-fd7a4cc5dde8/IncomingWebhook/01f248867e984eca9af978ba01ab78aa/86b10697-56ab-463a-b5b9-229478a575a8/V2bnXOPqtXgG2AFKPmFRvRVE2MrgJeIkXB85rf68t0RMc1' // <-- remplace ici aussi
                def message = """
                {
                  "@type": "MessageCard",
                  "@context": "http://schema.org/extensions",
                  "themeColor": "FF0000",
                  "summary": "Echec du build",
                  "sections": [{
                    "activityTitle": "‚ùå Echec du build: ${env.JOB_NAME} #${env.BUILD_NUMBER}",
                    "activitySubtitle": "Jenkins CI",
                    "facts": [
                      {"name": "Projet", "value": "${env.JOB_NAME}"},
                      {"name": "Build", "value": "#${env.BUILD_NUMBER}"},
                      {"name": "Logs", "value": "[Console Output](${env.BUILD_URL}console)"},
                      {"name": "Rapport HTML", "value": "[log.html](${env.BUILD_URL}/Resultats/log.html)"}
                    ],
                    "markdown": true
                  }]
                }
                """
                writeFile file: 'teams_payload_failure.json', text: message
                // bat "curl -H \"Content-Type: application/json\" -d @teams_payload_failure.json ${teamsWebhook}"
                // bat 'curl -H "Content-Type: application/json" -d @teams_payload_success.json "https://teams.microsoft.com/l/channel/19A6a989d0b84144441b4cc6679be1d1f740thread.tacv2/GA9nA9ral?groupId=beceef74-aa06-4f9f-ad9a-d390d968918c&tenantId=dc363e45-8d5b-4214-8003-fd7a4cc5dde8"'
                bat 'curl -H "Content-Type: application/json" -d @teams_payload_success.json "https://conserto365.webhook.office.com/webhookb2/beceef74-aa06-4f9f-ad9a-d390d968918c@dc363e45-8d5b-4214-8003-fd7a4cc5dde8/IncomingWebhook/01f248867e984eca9af978ba01ab78aa/86b10697-56ab-463a-b5b9-229478a575a8/V2bnXOPqtXgG2AFKPmFRvRVE2MrgJeIkXB85rf68t0RMc1"'

            }
        }
    }
}
